name: Run Tests

on:
  workflow_call:
    inputs:
      notify_discord:
        required: false
        default: false
        type: boolean
      update_deps: 
        required: false
        default: none
        type: string
        # options:
        #   - none
        #   - local
        #   - nightly
        #   - latest
      run_context:
        required: false
        default: "No context"
        type: string

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the head commit of the branch
      uses: actions/checkout@v4

    - name: Write license file
      id: create-json
      uses: jsdaniell/create-json@v1.2.3
      with:
        name: "norsk_license.json"
        json: ${{ secrets.NORSK_LICENSE }}

    - name: Run Norsk 
      id: run-norsk
      run: |
          NORSK_CONTAINER_ID=$(docker run --pull=always --rm -d -p 6791:6791 -p 6790:6790 -p 8080:8080 --name norsk --mount type=bind,source=${{github.workspace}},target=${{github.workspace}} --mount type=bind,source=${{github.workspace}}/norsk_license.json,target=/mnt/license.json,readonly norskvideo/norsk:${{ (inputs.update_deps == 'nightly' || inputs.update_deps == 'local') && 'nightly' || 'latest'}} --license-file /mnt/license.json) 
          echo "NORSK_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $NORSK_CONTAINER_ID)" >> $GITHUB_OUTPUT
          echo "NORSK_CONTAINER_ID=$NORSK_CONTAINER_ID" >> $GITHUB_OUTPUT

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v4
    - name: Run the Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@v2

    - name: Nix env
      uses: rrbutani/use-nix-shell-action@v1
      with:
        file: shell.nix

    - name: Run Build (With Nightly)
      if: ${{ inputs.update_deps == 'nightly' }}
      run: |
          npm remove --workspaces @norskvideo/norsk-api @norskvideo/norsk-sdk @norskvideo/norsk-studio --save || true
          npm install --workspaces @norskvideo/norsk-sdk@nightly @norskvideo/norsk-studio@nightly --save || true
          npm install
          npm run build

    - name: Run Build (With Latest)
      if: ${{ inputs.update_deps == 'latest' }}
      run: |
          npm remove --workspaces @norskvideo/norsk-api @norskvideo/norsk-sdk @norskvideo/norsk-studio --save || true
          npm install --workspaces @norskvideo/norsk-sdk@latest @norskvideo/norsk-studio@latest --save || true
          npm install
          npm run build

    - name: Checkout Studio Core
      uses: actions/checkout@v4
      if: ${{ inputs.update_deps == 'local' }}
      with:
        repository: id3as/norsk-studio-core
        clean: true 
        ref: main # this could actually be the same ref as this build..?
        fetch-depth: 0
        fetch-tags: 1
        path: _peers/norsk-studio-core
        token: ${{ secrets.GH_PAT }}

    - name: Build Studio Core
      if: ${{ inputs.update_deps == 'local' }}
      working-directory: _peers/norsk-studio-core
      run: |
          npm install --save @norskvideo/norsk-sdk@nightly
          npm install
          npm run build
   
    - name: Run Build (With Local)
      if: ${{ inputs.update_deps == 'local' }}
      run: |
          npm remove --workspaces @norskvideo/norsk-sdk @norskvideo/norsk-studio --save || true
          npm install --workspaces @norskvideo/norsk-sdk@nightly --save || true 
          npm install ./_peers/norsk-studio-core --save || true
          npm install
          npm run build

    - name: Run Build (With No Update)
      if: ${{ inputs.update_deps == 'none' }}
      run: npm install && npm run build

    - name: Run Tests
      env: 
        RUNNER: ${{ runner.name }}
        CONTEXT: ${{ inputs.run_context }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        NORSK_HOST: ${{ steps.run-norsk.outputs.NORSK_HOST }}
      run: "./scripts/gh-tests.sh"
      timeout-minutes: 40

    - name: Stop Norsk 
      if: always()
      run: docker stop ${{ steps.run-norsk.outputs.NORSK_CONTAINER_ID }} 

    - name: Discord Webhook Action
      uses: tsickert/discord-webhook@v5.3.0
      if: ${{ always() && inputs.notify_discord && hashFiles('discord.json') != '' }} 
      with:
        webhook-url: ${{ secrets.DISCORD_URL }}
        raw-data: discord.json

    - name: Discord Webhook Action
      uses: tsickert/discord-webhook@v5.3.0
      if: ${{ failure() && inputs.notify_discord && hashFiles('discord.json') == '' }} 
      with:
        webhook-url: ${{ secrets.DISCORD_URL }}
        username: "Jankings"
        avatar-url: "https://pones.theponyapi.com/file/ponies/5201928829009920/thumb_small"
        content: ""
        embed-title: "Norsk Studio (public) Tests Failed"
        embed-color: 15548997
        embed-description: | 
          No Results File Found 
          ${{inputs.run_context}}

    - name: Dump norsk logs
      if: always()
      uses: jwalton/gh-docker-logs@v2
      with:
        images: 'norsk'
        dest: './logs'

    - name: Tar logs
      if: always()
      run: tar cvzf ./logs.tgz ./logs

    - name: Upload SS report to GitHub
      if: always()
      uses: actions/upload-artifact@master
      with:
        retention-days: 3
        name: ss.json
        path: ./ss.json

    - name: Upload Built-in report to GitHub
      if: always()
      uses: actions/upload-artifact@master
      with:
        retention-days: 3
        name: built-ins.json
        path: ./built-ins.json

    - name: Upload Built-in logs to GitHub
      if: always()
      uses: actions/upload-artifact@master
      with:
        retention-days: 3
        name: built-ins.log
        path: workspaces/built-ins/logs/debug.log

    - name: Upload SS logs to GitHub
      if: always()
      uses: actions/upload-artifact@master
      with:
        retention-days: 3
        name: ss.log
        path: workspaces/source-switcher/logs/debug.log

    - name: Upload docker logs to GitHub
      if: always()
      uses: actions/upload-artifact@master
      with:
        retention-days: 3
        name: logs.tgz
        path: ./logs.tgz
