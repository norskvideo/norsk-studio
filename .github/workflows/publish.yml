name: Publish

on:
  workflow_dispatch:
    inputs:
      update-deps:
        description: 'Update Norsk Deps'
        required: true
        default: true
        type: boolean
      new-version:
        description: 'New Version'
        required: true
        default: 'minor'
        type: choice
        options:
          - major
          - minor
          - patch
          - nightly
      run-tests:
        description: 'Run Tests'
        required: true
        type: boolean
  workflow_call:
    inputs:
      update-deps:
        description: 'Update Norsk SDK'
        required: true
        default: true
        type: boolean
      new-version:
        description: 'New Version'
        required: true
        default: 'minor'
        type: string
        # options:
        #   - major
        #   - minor
        #   - patch
        #   - nightly
      run-tests:
        description: 'Run Tests'
        required: true
        type: boolean

jobs:
  run-tests:
    if: ${{ inputs.run-tests }}
    uses: ./.github/workflows/run-tests.yml
    secrets: inherit
    with:
      update_deps: nightly
      notify_discord: true
      run_context: "**Note:**: Publishing latest nightly if this passed"

  publish:
    needs: run-tests
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the head commit of the branch
      uses: actions/checkout@v4

    - name: Install Nix
      if: ${{ runner.environment == 'github-hosted' }}
      uses: DeterminateSystems/nix-installer-action@v4

    - name: Run the Magic Nix Cache
      if: ${{ runner.environment == 'github-hosted' }}
      uses: DeterminateSystems/magic-nix-cache-action@v2

    - name: Nix env
      uses: rrbutani/use-nix-shell-action@v1
      with:
        file: shell.nix

    - name: Run Build (With Nightly)
      if: ${{ inputs.update-deps && inputs.new-version == 'nightly' }}
      run: |
          npm remove --workspaces @norskvideo/norsk-api @norskvideo/norsk-sdk @norskvideo/norsk-studio --save || true
          npm install --workspaces @norskvideo/norsk-sdk@nightly @norskvideo/norsk-studio@nightly --save || true
          npm install
          npm run build

    - name: Run Build (With Latest)
      if: ${{ inputs.update-deps && inputs.new-version != 'nightly' }}
      run: |
          npm remove --workspaces @norskvideo/norsk-api @norskvideo/norsk-sdk @norskvideo/norsk-studio --save || true
          npm install --workspaces @norskvideo/norsk-sdk@latest @norskvideo/norsk-studio@latest --save || true
          npm install
          npm run build

    - name: Run Build (With No Update)
      if: ${{ !inputs.update-deps  }}
      run: npm install && npm run build

    - name: Check for changes
      id: changes
      run: |
        git config --global user.email "jankings@id3as.co.uk"
        git config --global user.name "Jankings"
        if git diff --exit-code package-lock.json; then
          echo "changes_exist=false" >> $GITHUB_OUTPUT
        else
          echo "changes_exist=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit latest
      if: ${{ steps.changes.outputs.changes_exist && inputs.new-version == 'nightly' }}
      continue-on-error: true
      run: |
        git add workspaces/*/package.json
        git add package-lock.json
        git commit -m "Automated dependency update"
          
    - name: Tag Nightlies
      if: ${{ inputs.new-version == 'nightly' }}
      run: |
        commit="$(git rev-parse --short=8 HEAD)"
        label="$(cat workspaces/built-ins/package.json | jq -r .version)-$(date --iso-8601)-$commit"
        npm version --workspace workspaces/built-ins --no-git-tag-version "$label+nightly"
        label="$(cat workspaces/source-switcher/package.json | jq -r .version)-$(date --iso-8601)-$commit"
        npm version --workspace workspaces/source-switcher --no-git-tag-version "$label+nightly"
        label="$(cat workspaces/aws/package.json | jq -r .version)-$(date --iso-8601)-$commit"
        npm version --workspace workspaces/aws --no-git-tag-version "$label+nightly"

    - name: "Publish"
      id: "publish-bi"
      uses: JS-DevTools/npm-publish@v3
      with:
        access: public
        token: ${{ secrets.NPM_TOKEN }}
        tag: ${{ inputs.new-version == 'nightly' && 'nightly' || 'latest' }}
        package: workspaces/built-ins

    - name: "Publish"
      id: "publish-ss"
      uses: JS-DevTools/npm-publish@v3
      with:
        access: public
        token: ${{ secrets.NPM_TOKEN }}
        tag: ${{ inputs.new-version == 'nightly' && 'nightly' || 'latest' }}
        package: workspaces/source-switcher

    - name: "Publish"
      id: "publish-aws"
      uses: JS-DevTools/npm-publish@v3
      with:
        access: public
        token: ${{ secrets.NPM_TOKEN }}
        tag: ${{ inputs.new-version == 'nightly' && 'nightly' || 'latest' }}
        package: workspaces/aws

    # Actual release
    - name: Version Bump
      if: ${{ inputs.new-version != 'nightly' }}
      run: |
        npm version --workspaces ${{ inputs.new-version }}  --git-tag-version=false
        git add workspaces/*/package.json
        git add package-lock.json
        git commit -m "Automated Version bump"

    # Then push in whatever we now have
    - name: Push changes
      run: | 
        git push 



