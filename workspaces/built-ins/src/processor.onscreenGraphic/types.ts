/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/graphics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Return the currently available graphic files
         * @description Returns all the graphics files on the server
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful operation */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["graphic"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * Upload a new graphic
         * @description Upload a new graphic as a multi-part form POST
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description A multipart form containing the file to upload) */
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        /** Format: binary */
                        file?: string;
                    };
                };
            };
            responses: {
                /** @description The file was uploaded successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description No file was uploaded */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description A graphic with the same name already exists */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description File upload failed */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/graphic": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Delete a graphic file from the server
         * @description Deletes the passed filename from the server if present
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description The graphic to delete */
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description The name of the graphic file to delete
                         * @example graphic.png
                         */
                        filename: string;
                    };
                };
            };
            responses: {
                /** @description The graphic was successfully deleted */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description The specified graphic was not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Failed to delete the graphic */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/active-graphic": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Info about the current graphic
         * @description Returns the configuration for current the onscreen graphic is any
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Details of the configured graphic */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["config"];
                    };
                };
                /** @description No graphic configured */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Component not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /**
         * Change the current graphic file and/or position
         * @description Change the current graphic file and/or position
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description The graphic filename and location (sending an empty JSON object will delete the graphic) */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["config"] | components["schemas"]["emptyObject"];
                };
            };
            responses: {
                /** @description The active graphic was successfully updated */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["errorResponse"];
                    };
                };
                /** @description Component not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Stop displaying the current graphic */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description The active graphic was successfully hidden */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Component not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * @description The name of the image file
         * @example Norsk.png
         */
        graphic: string;
        coordinatePosition: {
            /** @enum {string} */
            type: "coordinate";
            /** @description X coordinate position */
            x: number;
            /** @description Y coordinate position */
            y: number;
        };
        namedPosition: {
            /** @enum {string} */
            type: "named";
            /**
             * @description Named position for the graphic
             * @enum {string}
             */
            position: "topleft" | "topright" | "bottomleft" | "bottomright";
        };
        position: components["schemas"]["coordinatePosition"] | components["schemas"]["namedPosition"];
        /** @description The configuration for the onscreen graphic */
        config: {
            graphic?: components["schemas"]["graphic"];
            position?: components["schemas"]["position"];
        };
        /** @example {} */
        emptyObject: Record<string, never>;
        /** @description Details of why the request failed */
        errorResponse: {
            /** @description A description of the error */
            error?: string;
            /** @description The unacceptable data */
            details?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
