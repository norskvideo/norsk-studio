/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/disconnect": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Disconnect an RTMP stream
         * @description Disconnects an active RTMP stream by stream name
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description The stream to disconnect */
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description The name of the stream to disconnect
                         * @example camera1
                         */
                        streamName: string;
                    };
                };
            };
            responses: {
                /** @description The stream was successfully disconnected */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description The specified stream was not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description A description of the error */
                            error?: string;
                            /** @description Additional error details */
                            details?: string;
                        };
                    };
                };
                /** @description Failed to disconnect the stream */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description A description of the error */
                            error?: string;
                            /** @description Additional error details */
                            details?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/enable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Re-enables a disabled RTMP stream
         * @description Re-enables a previously disconnected RTMP stream
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description The stream to re-enable */
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description The name of the stream to re-enable
                         * @example camera1
                         */
                        streamName: string;
                    };
                };
            };
            responses: {
                /** @description The stream was successfully re-enabled */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Stream is already connected or invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description A description of the error */
                            error?: string;
                            /** @description Additional error details */
                            details?: string;
                        };
                    };
                };
                /** @description Failed to re-enable stream */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description A description of the error */
                            error?: string;
                            /** @description Additional error details */
                            details?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/disable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Disables an RTMP stream by id
         * @description null
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description The stream to disable */
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description The Id of the stream to disable
                         * @example camera1
                         */
                        streamId: string;
                    };
                };
            };
            responses: {
                /** @description The stream was successfully disabled */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description The stream isn't known about, or invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description A description of the error */
                            error?: string;
                            /** @description Additional error details */
                            details?: string;
                        };
                    };
                };
                /** @description Failed to disable stream */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description A description of the error */
                            error?: string;
                            /** @description Additional error details */
                            details?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
