/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        x264Codec: {
            /** @enum {string} */
            type: "x264";
            threads?: number;
            bitrateMode?: {
                value: number;
                /** @enum {string} */
                mode: "abr" | "cqp" | "crf";
            };
            /** @enum {string} */
            profile?: "baseline" | "main" | "high" | "high10" | "high422" | "high444";
            /** @enum {number} */
            level?: 1 | 1.1 | 1.2 | 1.3 | 2 | 2.1 | 2.2 | 3 | 3.1 | 3.2 | 4 | 4.1 | 4.2 | 5 | 5.1;
            keyFrameIntervalMin?: number;
            keyFrameIntervalMax?: number;
            bframes?: number;
            /** @enum {string} */
            tune?: "film" | "animation" | "grain" | "stillimage" | "psnr" | "ssim" | "fastdecode" | "zerolatency";
            /** @enum {string} */
            preset?: "ultrafast" | "superfast" | "veryfast" | "faster" | "fast" | "medium" | "slow" | "slower" | "veryslow" | "placebo";
            frameReference?: number;
            cabac?: boolean;
            vbvMaxRate?: number;
            vbvBufferSize?: number;
            sceneCut?: number;
            aud?: boolean;
            noDeblock?: boolean;
            /** @enum {string} */
            nalHrd?: "none" | "vbr" | "cbr";
        };
        ma35dH264Codec: {
            /** @enum {string} */
            type: "amdMA35D-h264";
            /** @enum {string} */
            profile?: "baseline" | "main" | "high" | "high10";
            /** @enum {number} */
            level?: 1 | 2 | 2.1 | 3 | 3.1 | 4 | 4.1 | 5 | 5.1 | 5.2 | 6 | 6.1 | 6.2;
            rateControl?: {
                /** @enum {string} */
                mode: "const-qp";
                qp: number;
            } | {
                /** @enum {string} */
                mode: "cbr";
                bitrate: number;
            } | {
                /** @enum {string} */
                mode: "vbr";
                bitrate: number;
            } | {
                /** @enum {string} */
                mode: "constrained-vbr";
                bitrate: number;
                maxBitrate: number;
                bufSize: number;
            } | {
                /** @enum {string} */
                mode: "content-adaptive";
                bitrate: number;
                maxBitrate: number;
                bufSize: number;
            };
            lookaheadDepth?: number;
            gopSize?: number;
            tempAqGain?: number;
            spatAqGain?: number;
            minQp?: number;
            maxQp?: number;
            /** @enum {string} */
            preset?: "fast" | "medium" | "slow";
            crf?: number;
            forcedIdr?: number;
            bf?: number;
            /** @enum {string} */
            qpMode?: "relative-load" | "uniform";
            /** @enum {string} */
            spatialAq?: "auto" | "disable" | "enable";
            /** @enum {string} */
            temporalAq?: "auto" | "disable" | "enable";
            /** @enum {string} */
            dynamicGop?: "auto" | "disable" | "enable";
            /** @enum {string} */
            tuneMetrics?: "vq" | "psnr" | "ssim" | "vmaf";
            latencyMs?: number;
            delayInitialization?: number;
        };
        ma35dHevcCodec: {
            /** @enum {string} */
            type: "amdMA35D-hevc";
            /** @enum {string} */
            profile?: "main" | "main10";
            /** @enum {number} */
            level?: 1 | 2 | 2.1 | 3 | 3.1 | 4 | 4.1 | 5 | 5.1 | 5.2 | 6 | 6.1 | 6.2;
            /** @enum {string} */
            tier?: "main" | "high";
            rateControl?: {
                /** @enum {string} */
                mode: "const-qp";
                qp: number;
            } | {
                /** @enum {string} */
                mode: "cbr";
                bitrate: number;
            } | {
                /** @enum {string} */
                mode: "vbr";
                bitrate: number;
            } | {
                /** @enum {string} */
                mode: "constrained-vbr";
                bitrate: number;
                maxBitrate: number;
                bufSize: number;
            } | {
                /** @enum {string} */
                mode: "content-adaptive";
                bitrate: number;
                maxBitrate: number;
                bufSize: number;
            };
            lookaheadDepth?: number;
            gopSize?: number;
            tempAqGain?: number;
            spatAqGain?: number;
            minQp?: number;
            maxQp?: number;
            /** @enum {string} */
            preset?: "fast" | "medium" | "slow";
            crf?: number;
            forcedIdr?: number;
            bf?: number;
            /** @enum {string} */
            qpMode?: "relative-load" | "uniform";
            /** @enum {string} */
            spatialAq?: "auto" | "disable" | "enable";
            /** @enum {string} */
            temporalAq?: "auto" | "disable" | "enable";
            /** @enum {string} */
            dynamicGop?: "auto" | "disable" | "enable";
            /** @enum {string} */
            tuneMetrics?: "vq" | "psnr" | "ssim" | "vmaf";
            latencyMs?: number;
            delayInitialization?: number;
        };
        quadraH264Codec: {
            /** @enum {string} */
            type: "quadra-h264";
            extraOpts?: string;
            enableAud?: boolean;
            gpuIndex?: number;
            bitrate?: number;
            enableVfr?: boolean;
            crf?: number;
            gopPresetIndex?: number;
            intraPeriod?: number;
            rcEnable?: boolean;
            intraQp?: number;
            rcInitDelay?: number;
            /** @enum {string} */
            profile?: "baseline" | "main" | "extended" | "high" | "high10";
            /** @enum {number} */
            level?: 1 | 2 | 2.1 | 3 | 3.1 | 4 | 4.1 | 5 | 5.1 | 5.2 | 6 | 6.1 | 6.2;
            fillerEnable?: boolean;
            minQp?: number;
            maxQp?: number;
            maxDeltaQp?: number;
            cuLevelRCEnable?: boolean;
            lookAheadDepth?: number;
            vbvBufferSize?: number;
            vbvMaxRate?: number;
        };
        loganH264Codec: {
            /** @enum {string} */
            type: "logan-h264";
            extraOpts?: string;
            enableAud?: boolean;
            gpuIndex?: number;
            bitrate?: number;
            flushGop?: boolean;
            enableVfr?: boolean;
            crf?: number;
            cbr?: boolean;
            gopPresetIndex?: number;
            intraPeriod?: number;
            rcEnable?: boolean;
            intraQp?: number;
            rcInitDelay?: number;
            /** @enum {string} */
            profile?: "baseline" | "main" | "extended" | "high" | "high10";
            /** @enum {number} */
            level?: 1 | 2 | 2.1 | 3 | 3.1 | 4 | 4.1 | 5 | 5.1 | 5.2 | 6 | 6.1 | 6.2;
        };
        nvidiaH264Codec: {
            /** @enum {string} */
            type: "nv-h264";
            /** @enum {string} */
            preset?: "p1" | "p2" | "p3" | "p4" | "p5" | "p6" | "p7";
            /** @enum {string} */
            tuning?: "high_quality" | "low_latency" | "ultra_low_latency" | "lossless";
            idrPeriod?: number;
            gopInterval?: number;
            frameIntervalP?: number;
            maxNumRefFrames?: number;
            /** @enum {number} */
            level?: 1 | 2 | 2.1 | 3 | 3.1 | 4 | 4.1 | 5 | 5.1 | 5.2 | 6 | 6.1 | 6.2;
            /** @enum {string} */
            profile?: "baseline" | "main" | "high" | "high444";
            outputAud?: boolean;
            rateControl?: {
                /** @enum {string} */
                mode: "con_stqp" | "vbr" | "cbr";
                averageBitrate: number;
                maxBitrate?: number;
                vbvBufferSize?: number;
                vbvInitialDelay?: number;
                enableLookahead?: boolean;
                strictGopTarget?: boolean;
                lookaheadDepth?: number;
                enableTemporalAQ?: boolean;
                enableSpatialAQ?: boolean;
                aqStrength?: number;
            };
            /** @enum {string} */
            useBFramesAsRef?: "disabled" | "each" | "middle";
        };
        frameRate: {
            frames: number;
            seconds: number;
        };
        softwareLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["x264Codec"];
            frameRate: components["schemas"]["frameRate"];
        };
        ma35dLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["ma35dH264Codec"] | components["schemas"]["ma35dHevcCodec"];
            frameRate: components["schemas"]["frameRate"];
        };
        loganLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["loganH264Codec"];
            frameRate: components["schemas"]["frameRate"];
        };
        nvidiaLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["nvidiaH264Codec"];
            frameRate: components["schemas"]["frameRate"];
        };
        quadraLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["quadraH264Codec"];
            frameRate: components["schemas"]["frameRate"];
        };
        ladderRungDefinition: {
            name: string;
            software?: components["schemas"]["softwareLadderRung"];
            ma35d?: components["schemas"]["ma35dLadderRung"];
            logan?: components["schemas"]["loganLadderRung"];
            nvidia?: components["schemas"]["nvidiaLadderRung"];
            quadra?: components["schemas"]["quadraLadderRung"];
        };
        fixedLadderConfig: {
            __global?: {
                /** @enum {string} */
                hardware?: "software" | "ma35d" | "logan" | "nvidia" | "quadra";
            };
            id: string;
            displayName: string;
            notes?: string;
            rungs: components["schemas"]["ladderRungDefinition"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
