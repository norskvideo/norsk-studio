/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        x264Codec: {
            /** @enum {string} */
            type: "x264";
            bitrateMode: {
                value: number;
                /** @enum {string} */
                mode: "abr" | "cqp" | "crf";
            };
            keyFrameIntervalMax: number;
            keyFrameIntervalMin: number;
            sceneCut: number;
            /** @enum {string} */
            preset: "ultrafast" | "superfast" | "veryfast" | "faster" | "fast" | "medium" | "slow" | "slower" | "veryslow" | "placebo";
            /** @enum {string} */
            tune: "film" | "animation" | "grain" | "stillimage" | "psnr" | "ssim" | "fastdecode" | "zerolatency";
            threads: number;
            bframes: number;
        };
        ma35dH264Codec: {
            /** @enum {string} */
            type: "amdMA35D-h264";
            /** @enum {string} */
            profile: "baseline" | "main" | "high" | "high10";
            rateControl: {
                /** @enum {string} */
                mode: "cbr";
                bitrate: number;
            };
            gopSize: number;
        };
        ma35dHevcCodec: {
            /** @enum {string} */
            type: "amdMA35D-hevc";
            /** @enum {string} */
            profile: "main" | "main10";
            rateControl: {
                /** @enum {string} */
                mode: "cbr";
                bitrate: number;
            };
            gopSize: number;
        };
        quadraH264Codec: {
            /** @enum {string} */
            type: "quadra-h264";
            intraPeriod: number;
            bitrate: number;
        };
        loganH264Codec: {
            /** @enum {string} */
            type: "logan-h264";
            intraPeriod: number;
            bitrate: number;
        };
        nvidiaH264Codec: {
            /** @enum {string} */
            type: "nv-h264";
            idrPeriod: number;
            rateControl: {
                /** @enum {string} */
                mode: "con_stqp" | "vbr" | "cbr";
                averageBitrate: number;
            };
        };
        frameRate: {
            frames: number;
            seconds: number;
        };
        softwareLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["x264Codec"];
            frameRate: components["schemas"]["frameRate"];
        };
        ma35dLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["ma35dH264Codec"] | components["schemas"]["ma35dHevcCodec"];
            frameRate: components["schemas"]["frameRate"];
        };
        loganLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["loganH264Codec"];
            frameRate: components["schemas"]["frameRate"];
        };
        nvidiaLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["nvidiaH264Codec"];
            frameRate: components["schemas"]["frameRate"];
        };
        quadraLadderRung: {
            width: number;
            height: number;
            codec: components["schemas"]["quadraH264Codec"];
            frameRate: components["schemas"]["frameRate"];
        };
        ladderRungDefinition: {
            name: string;
            software?: components["schemas"]["softwareLadderRung"];
            ma35d?: components["schemas"]["ma35dLadderRung"];
            logan?: components["schemas"]["loganLadderRung"];
            nvidia?: components["schemas"]["nvidiaLadderRung"];
            quadra?: components["schemas"]["quadraLadderRung"];
        };
        fixedLadderConfig: {
            __global?: {
                /** @enum {string} */
                hardware?: "software" | "ma35d" | "logan" | "nvidia" | "quadra";
            };
            id: string;
            displayName: string;
            notes?: string;
            rungs: components["schemas"]["ladderRungDefinition"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
