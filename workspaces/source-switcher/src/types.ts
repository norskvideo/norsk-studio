/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @example source1-stream */
        stream: string;
        rect: {
            x: number;
            y: number;
            width: number;
            height: number;
        };
        overlay: {
            source: components["schemas"]["stream"];
            sourceRect?: components["schemas"]["rect"];
            destRect?: components["schemas"]["rect"];
        };
        "status-update": {
            primary: components["schemas"]["stream"];
            transition?: components["schemas"]["transition"];
            overlays?: components["schemas"]["overlay"][];
        };
        "active-source": {
            source: components["schemas"]["stream"];
            resolution: {
                width?: number;
                height?: number;
            };
            /** @description The number of milliseconds this source has been active */
            age: number;
            frameRate?: {
                frames?: number;
                seconds?: number;
            };
        };
        status: {
            active: {
                primary: components["schemas"]["stream"];
                overlays: components["schemas"]["overlay"][];
            };
            available: components["schemas"]["active-source"][];
        };
        transition: {
            /** @enum {string} */
            type?: "fade";
            /** @description How long this transition should take */
            durationMs?: number;
        } | {
            /** @enum {string} */
            type?: "animate";
            /** @description How long this transition should take */
            durationMs?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
